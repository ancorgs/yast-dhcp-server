/**
 * File:	include/dhcp-server/options.ycp
 * Package:	Configuration of dhcp-server
 * Summary:	Popups for table/popup mechanism
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 */

{

    textdomain "dhcp-server";

    import "DhcpServer";

    import "Popup";
    import "Label";

    /**
      * Initialize popups
      * Create description map and copy it into appropriate variable of the
      *  DhcpServer module
      */
    global define void InitPopups () ``{
	map p = $[
	    "__enable_service" : $[
		"table" : $[
		   // table cell, label
		    "label" : _("Enable DHCP server at boot time"),
		    "summary" : ``(DhcpServer::enableServiceSummary ()),
		    "optional" : false,
		],
		"popup" : $[
		    "widget" : `checkbox,
		    "init" : ``(DhcpServer::enableServiceInit ()),
		    "store" : ``(DhcpServer::enableServiceSave ()),
		],
	    ],
	    "__subnets" : $[
		"table" : $[
		    // table cell, label
		    "label" : _("Subnets"),
		    "handle" : `subnets,
		    "optional" : false,
		],
	    ],
	    "__hosts" : $[
		"table" : $[
		    // table cell, label
		    "label" : _("Hosts"),
		    "handle" : `hosts,
		    "optional" : false,
		],
	    ],
	    "____sep" : $[
		"table" : $[
		    "label" : "-------------------------------",
		],
	    ],
	    "host" : $[
		"table" : $[
		    "optional" : false,
		],
	    ],
	    "subnet" : $[
		"table" : $[
		    "optional" : false,
		],
	    ],
	    "netmask" : $[
		"table" : $[
		    "optional" : false,
		],
	    ],
	    "range" : $[
		"popup" : $[
		    // label -- help text
		    "help" : _("If multiple ranges are needed, split them by coma"),
		],
	    ],
	    "log-facility" : $[
		"popup" : $[
		    // label -- help text
		    "help" : _("If you change this, update also syslog configuration"),
		],
	    ],
	    "hardware" : $[
		"popup" : $[
		    "widget" : `custom,
		    "custom_widget" : `VBox (
			// combo box
			`ComboBox (`id (`hw), _("&Hardware type"), [
			    // combo box entry, networking technology name
			    `item (`id ("ethernet"), _("Ethernet")),
			    // combo box entry, networking technology name
			    `item (`id ("token-ring"), _("Token ring"))]),
			// test entry, MAC better not to be translated,
			// translation would decrease the understandability
			`TextEntry (`id (`addr), _("&MAC address"))),
		    "init" : ``(DhcpServer::hardwareInit ()),
		    "store" : ``(DhcpServer::hardwareSave ()),
		],
	    ],

	];
	DhcpServer::popups = p;
    }

    /**
      * Initialization function of a table entry / popup
      * @param opt_id any option id
      * @param opt_key any option key
      */
    global define void hardwareInit (any opt_id, any opt_key) ``{
	list(string) l = splitstring (current_section[opt_key]:"", " ");
	l = filter (`i, l, ``(i != ""));
	UI::ChangeWidget (`id (`hw), `Value, l[0]:"ethernet");
	UI::ChangeWidget (`id (`addr), `Value, l[1]:"");
    }

    /**
      * Summary function of a table entry / popup
      * @param opt_id any option id
      * @param opt_key any option key
      */
    global define void hardwareSave (any opt_id, any opt_key) ``{
	current_section[opt_key] = sformat ("%1 %2",
	    UI::QueryWidget (`id (`hw), `Value),
	    UI::QueryWidget (`id (`addr), `Value));
    }

    /**
      * Summary function of a table entry / popup
      * @param opt_id any option id
      * @param opt_key any option key
      * @return string table entry summary
      */
    global define string enableServiceSummary (any opt_id, any opt_key) ``{
	if (settings["__run_dhcp_server"]:false)
	{
	    // table cell
	    return _("Yes");
	}
	else
	{
	    // table cell
	    return _("No");
	}
    }

    /**
      * Initialization function of a table entry / popup
      * @param opt_id any option id
      * @param opt_key any option key
      */
    global define void enableServiceInit (any opt_id, any opt_key) ``{
	UI::ChangeWidget (`id (opt_key), `Value,
	    settings["__run_dhcp_server"]:false);
    }

    /**
      * Summary function of a table entry / popup
      * @param opt_id any option id
      * @param opt_key any option key
      */
    global define void enableServiceSave (any opt_id, any opt_key)``{
	settings["__run_dhcp_server"] = UI::QueryWidget (`id (opt_key), `Value);
    }


}
