/**
 * File:	include/dhcp-server/routines.ycp
 * Package:	Configuration of dhcp-server
 * Summary:	Miscelanous functions for configuration of dhcp-server.
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 */

{

textdomain "dhcp-server";

/**
 * Abort function
 * @return blah blah lahjk
 */
global define boolean Abort() ``{
    if(AbortFunction != nil)
	return eval(AbortFunction) == true;
    return false;
}

    /**
      * Create section to the dhcpd.conf file
      * @param section map describing the section
      * @param indent string line indentation
      * @return string part of dhcpd.conf representing the section
      */
    global define string writeSection (map section, string indent) ``{
	string s_output = "";
	section = filter (`k, `v, section, ``(substring (k, 0, 2) != "__"));
	foreach (`k, `v, section, ``{
	    if (k == "range")
	    {
		list ranges = splitstring (v, ",");
		foreach (`r, ranges, ``{
		    s_output = s_output + sformat ("%1range %2;\n", indent, r);
		});
	    }
	    else if (v == true)
		s_output = s_output + sformat ("%1%2;\n", indent, k);
	    else if (v != false)
		s_output = s_output + sformat ("%1%2 %3;\n", indent, k, v);
	});
	return s_output;
    }

    /**
      * Create dhcpd.conf file from stored settings
      */
    global define void createDhcpdConf () ``{
	string output = "#
# This file was generated by YaST2.
#
# If you update it manually, YaST2 component for DHCP server
# configuration will rewrite it next time you use it.
#\n";

	map bash_out = SCR::Execute (.target.bash_output, "LANG=C /bin/date");

	output = output + sformat ("# Creation time: %1#\n\n",
	    bash_out["stdout"]:"");// FIXME

	output = output + writeSection (settings["globals"]:$[], "");
	output = output + "\n";
	foreach (`sk, `sv, settings["subnets"]:$[], ``{
	    map m = filter (`k, `v, sv, ``(k != "subnet" && k != "netmask"));
	    output = output + sformat ("subnet %1 netmask %2 {\n",
		sv["subnet"]:"", sv["netmask"]:"");
	    output = output + writeSection (m, "    ");
	    output = output + "}\n\n";
	});
	foreach (`sk, `sv, settings["hosts"]:$[], ``{
	    map m = filter (`k, `v, sv, ``(k != "host"));
            output = output + sformat ("host %1 {\n", sv["host"]:"");
            output = output + writeSection (m, "    ");
            output = output + "}\n\n";
	});

	SCR::Write (.target.string, "/etc/dhcpd.conf", output);
    }

    /**
      * Create new section
      * @param @param what symbol specifying the section type, `global, `subnet
      *  or `host
      * @return map created section
      */
    global define map createNewSection (symbol what) ``{
	if (what == `global)
	{
	    return $[
		"default-lease-time" : 600,
		"max-lease-time" : 7200,
		"ddns-update-style" : "none",
		"ddns-updates" : "off",
		"log-facility" : "local7",
		"authoritative" : "",
	    ];
	}
	else if (what == `subnet)
	{
	    return $[
		"subnet" : "",
		"netmask" : "",
		"range" : "",
		"option routers" : "",
	    ];
	}
	else if (what == `host)
	{
	    return $[
		"host" : "",
		"hardware" : "",
		"fixed-address" : "",
	    ];
	}

	return $[];
    }

    /**
      * Create the settings if no are created yet
      * @return map created settings
      */
    global define map createSettings () ``{
	return $[
	    "globals" : createNewSection (`global),
	    "subnets" : $[],
	    "hosts" : $[],
	];
    }

/* EOF */
}
