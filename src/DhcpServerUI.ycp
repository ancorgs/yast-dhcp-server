/**
 * File:	modules/DhcpServer.ycp
 * Package:	Configuration of dhcp-server
 * Summary:	Data for configuration of dhcp-server,
 *              input and output functions.
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 *
 * Representation of the configuration of dhcp-server.
 * Input and output routines.
 */

{

    module "DhcpServerUI";
    textdomain "dhcp-server";

    import "DhcpServer";
    import "Mode";
    import "Popup";
    import "Report";
    import "Service";
    import "SuSEFirewall"; // FIXME this is because of initialization problems

    global string current_entry_type = "";
    global string current_entry_id = "";
    global list<map<string,string> > current_entry_options = [];
    global list<map<string,string> > current_entry_directives = [];
    global string original_entry_type = "";
    global string original_entry_id = "";
    global string parent_type = "";
    global string parent_id = "";
    global symbol current_operation = nil;

    define list<map<string,string> > current_tsig_keys = [];
    define list<string> new_tsig_keys = [];
    define list<string> deleted_tsig_keys = [];


//    global string current_ddns_key_file = "";
  //  global boolean current_ddns_key_create = false;

    global map widgets = $[];

    global map popups = $[];

    // temporary variables
    list<string> entry_list = [];

    include "dhcp-server/routines.ycp";
    include "dhcp-server/helps.ycp";
    include "dhcp-server/options.ycp";
    include "dhcp-server/widgets.ycp";
    include "dhcp-server/dialogs.ycp";
    include "dhcp-server/dialogs2.ycp";
    include "dhcp-server/wizards.ycp";

    /**
      * Abort function
      * return boolean return true if abort
      */
    global boolean() AbortFunction = nil;

    /**
      * Constructor
      */
    global define void DhcpServerUI () ``{
	InitPopups ();
	InitWidgets ();
	widgets = union (widgets, new_widgets);
    }



/* EOF */
}
